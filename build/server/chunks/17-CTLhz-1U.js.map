{"version":3,"file":"17-CTLhz-1U.js","sources":["../../../.svelte-kit/adapter-node/entries/pages/dashboard/settings/_page.server.ts.js","../../../.svelte-kit/adapter-node/nodes/17.js"],"sourcesContent":["import { r as redirect, f as fail } from \"../../../../chunks/index2.js\";\nimport bcrypt from \"bcryptjs\";\nimport { d as db } from \"../../../../chunks/database.js\";\nimport fs from \"node:fs/promises\";\nimport { readFileSync, existsSync } from \"node:fs\";\nimport path from \"node:path\";\nconst UPLOADS_BASE_DIR = path.join(process.cwd(), \"static\", \"uploads\");\nconst load = async ({ locals, parent }) => {\n  if (!locals.user || !locals.user.id) {\n    throw redirect(302, \"/login\");\n  }\n  const { user: layoutUser, session } = await parent();\n  if (!layoutUser) {\n    throw redirect(302, \"/login\");\n  }\n  const currentUser = {\n    id: locals.user.id,\n    username: locals.user.username,\n    display_name: locals.user.display_name,\n    profileImage: locals.user.profile_image,\n    role: locals.user.role\n  };\n  return {\n    user: currentUser,\n    session\n  };\n};\nconst actions = {\n  // --- Profile & Account Actions ---\n  updateProfile: async ({ request, locals }) => {\n    if (!locals.user || !locals.user.id) {\n      return fail(401, { message: \"Unauthorized\" });\n    }\n    const data = await request.formData();\n    const displayName = data.get(\"displayName\")?.toString() || locals.user.display_name;\n    const profileImageFile = data.get(\"profileImage\");\n    const removeProfileImageFlag = data.get(\"removeProfileImage\") === \"true\";\n    const currentImagePath = data.get(\"currentImagePath\")?.toString();\n    let newProfileImagePath = currentImagePath || null;\n    if (profileImageFile && profileImageFile.size > 0) {\n      const uploadDir = path.join(UPLOADS_BASE_DIR, \"profile_images\");\n      await fs.mkdir(uploadDir, { recursive: true });\n      const filename = `${locals.user.id}-${Date.now()}-${profileImageFile.name}`;\n      newProfileImagePath = `/uploads/profile_images/${filename}`;\n      const filepath = path.join(uploadDir, filename);\n      await fs.writeFile(\n        filepath,\n        Buffer.from(await profileImageFile.arrayBuffer())\n      );\n      if (currentImagePath && currentImagePath !== newProfileImagePath) {\n        try {\n          const oldFilePath = path.join(\n            UPLOADS_BASE_DIR,\n            currentImagePath.replace(\"/uploads/\", \"\")\n          );\n          await fs.unlink(oldFilePath);\n        } catch (e) {\n          console.warn(\"Could not delete old profile image:\", e);\n        }\n      }\n    } else if (removeProfileImageFlag) {\n      if (currentImagePath) {\n        try {\n          const oldFilePath = path.join(\n            UPLOADS_BASE_DIR,\n            currentImagePath.replace(\"/uploads/\", \"\")\n          );\n          await fs.unlink(oldFilePath);\n        } catch (e) {\n          console.warn(\"Could not delete old profile image:\", e);\n        }\n      }\n      newProfileImagePath = null;\n    }\n    try {\n      const stmt = db.prepare(\n        \"UPDATE users SET display_name = ?, profile_image = ? WHERE id = ?\"\n      );\n      stmt.run(displayName, newProfileImagePath, locals.user.id);\n      return {\n        success: true,\n        message: \"Profile updated successfully!\",\n        profileImage: newProfileImagePath,\n        username: displayName\n      };\n    } catch (error) {\n      console.error(\"Error updating profile:\", error);\n      return fail(500, {\n        success: false,\n        message: error.message || \"Failed to update profile.\"\n      });\n    }\n  },\n  updateCredentials: async ({ request, locals }) => {\n    if (!locals.user || !locals.user.id) {\n      return fail(401, { message: \"Unauthorized\" });\n    }\n    const data = await request.formData();\n    const currentPassword = data.get(\"currentPassword\")?.toString();\n    const newUsername = data.get(\"newUsername\")?.toString();\n    const newPassword = data.get(\"newPassword\")?.toString();\n    if (!currentPassword) {\n      return fail(400, { message: \"Current password is required.\" });\n    }\n    const user = db.prepare(\"SELECT password_hash, username FROM users WHERE id = ?\").get(locals.user.id);\n    if (!user || !await bcrypt.compare(currentPassword, user.password_hash)) {\n      return fail(400, { message: \"Incorrect current password.\" });\n    }\n    let updateSql = \"UPDATE users SET\";\n    const params = [];\n    const updates = [];\n    if (newUsername && newUsername.trim() !== \"\" && newUsername !== user.username) {\n      updates.push(\"username = ?\");\n      params.push(newUsername);\n    }\n    if (newPassword && newPassword.trim() !== \"\") {\n      if (newPassword.length < 8) {\n        return fail(400, {\n          message: \"New password must be at least 8 characters long.\"\n        });\n      }\n      const newPasswordHash = await bcrypt.hash(newPassword, 10);\n      updates.push(\"password_hash = ?\");\n      params.push(newPasswordHash);\n    }\n    if (updates.length === 0) {\n      return fail(400, {\n        message: \"No changes provided for username or password.\"\n      });\n    }\n    updateSql += \" \" + updates.join(\", \") + \" WHERE id = ?\";\n    params.push(locals.user.id);\n    try {\n      db.prepare(updateSql).run(...params);\n      return { success: true, message: \"Credentials updated successfully!\" };\n    } catch (error) {\n      console.error(\"Error updating credentials:\", error);\n      if (error.message.includes(\"UNIQUE constraint failed: users.username\")) {\n        return fail(400, {\n          success: false,\n          message: \"Username already taken.\"\n        });\n      }\n      return fail(500, {\n        success: false,\n        message: error.message || \"Failed to update credentials.\"\n      });\n    }\n  },\n  // --- Admin Actions (Database Management) ---\n  resetDatabase: async ({ locals }) => {\n    if (!locals.user || locals.user.role !== \"admin\") {\n      return fail(403, { message: \"Forbidden: Admin access required.\" });\n    }\n    try {\n      const tablesToClear = db.prepare(\n        \"SELECT name FROM sqlite_master WHERE type='table' AND name NOT LIKE 'sqlite_%' AND name NOT IN ('users', 'sessions')\"\n      ).all();\n      db.transaction(() => {\n        for (const table of tablesToClear) {\n          db.prepare(`DELETE FROM \"${table.name}\"`).run();\n        }\n      })();\n      const clearedTableNames = tablesToClear.map((t) => `'${t.name}'`).join(\",\");\n      if (clearedTableNames) {\n        db.prepare(\n          `DELETE FROM sqlite_sequence WHERE name IN (${clearedTableNames})`\n        ).run();\n      }\n      return {\n        success: true,\n        message: \"Database data (excluding users and sessions) cleared successfully!\"\n      };\n    } catch (error) {\n      console.error(\"Error resetting database:\", error);\n      return fail(500, {\n        success: false,\n        message: error.message || \"Failed to reset database.\"\n      });\n    }\n  },\n  saveDatabase: async ({ locals }) => {\n    if (!locals.user || locals.user.role !== \"admin\") {\n      return fail(403, { message: \"Forbidden: Admin access required.\" });\n    }\n    let backupFilePath;\n    const backupDir = path.join(process.cwd(), \"temp_db_backups\");\n    let cleanupNeeded = false;\n    try {\n      await fs.mkdir(backupDir, { recursive: true });\n      backupFilePath = path.join(\n        backupDir,\n        `inventory_db_backup_${Date.now()}.sqlite`\n      );\n      db.backup(backupFilePath);\n      cleanupNeeded = true;\n      await new Promise((resolve) => setTimeout(resolve, 50));\n      const fileContent = readFileSync(backupFilePath);\n      const headers = new Headers();\n      headers.set(\"Content-Type\", \"application/x-sqlite3\");\n      headers.set(\n        \"Content-Disposition\",\n        `attachment; filename=\"inventory_db_backup_${Date.now()}.sqlite\"`\n      );\n      headers.set(\"Content-Length\", fileContent.length.toString());\n      return new Response(fileContent, { headers });\n    } catch (error) {\n      console.error(\"Error saving database for download:\", error);\n      if (error.code === \"ENOENT\" && backupFilePath) {\n        return fail(500, {\n          success: false,\n          message: `Server failed to read the backup file after creation. This might be a temporary file locking issue. Try again.`\n        });\n      }\n      return fail(500, {\n        success: false,\n        message: error.message || \"Failed to save database for download.\"\n      });\n    } finally {\n      if (cleanupNeeded && backupFilePath && existsSync(backupFilePath)) {\n        try {\n          await fs.unlink(backupFilePath);\n        } catch (e) {\n          console.warn(\"Failed to clean up temporary backup file:\", e);\n        }\n      }\n    }\n  },\n  importDatabase: async ({ request, locals }) => {\n    if (!locals.user || locals.user.role !== \"admin\") {\n      return fail(403, { message: \"Forbidden: Admin access required.\" });\n    }\n    const data = await request.formData();\n    const dbFile = data.get(\"dbFile\");\n    if (!dbFile || dbFile.size === 0) {\n      return fail(400, { message: \"No database file provided.\" });\n    }\n    if (!dbFile.name.endsWith(\".sqlite\") && !dbFile.name.endsWith(\".db\")) {\n      return fail(400, {\n        message: \"Invalid file type. Please upload a .sqlite or .db file.\"\n      });\n    }\n    const TEMP_UPLOAD_PATH = path.join(process.cwd(), \"temp_import_db.sqlite\");\n    try {\n      const arrayBuffer = await dbFile.arrayBuffer();\n      await fs.writeFile(TEMP_UPLOAD_PATH, Buffer.from(arrayBuffer));\n      return {\n        success: true,\n        message: \"Database imported! Please **stop and restart** the application for changes to take full effect.\"\n      };\n    } catch (error) {\n      console.error(\"Error importing database:\", error);\n      try {\n        await fs.unlink(TEMP_UPLOAD_PATH);\n      } catch (e) {\n      }\n      return fail(500, {\n        success: false,\n        message: error.message || \"Failed to import database.\"\n      });\n    }\n  }\n};\nexport {\n  actions,\n  load\n};\n","import * as server from '../entries/pages/dashboard/settings/_page.server.ts.js';\n\nexport const index = 17;\nlet component_cache;\nexport const component = async () => component_cache ??= (await import('../entries/pages/dashboard/settings/_page.svelte.js')).default;\nexport { server };\nexport const server_id = \"src/routes/dashboard/settings/+page.server.ts\";\nexport const imports = [\"_app/immutable/nodes/17.QhrWgc6A.js\",\"_app/immutable/chunks/BxWPM7vt.js\",\"_app/immutable/chunks/VrzbJYtp.js\",\"_app/immutable/chunks/twlfZeI1.js\",\"_app/immutable/chunks/jPwQk_2E.js\",\"_app/immutable/chunks/BwGKD061.js\",\"_app/immutable/chunks/K2z4qc4G.js\",\"_app/immutable/chunks/3dJlLkWl.js\",\"_app/immutable/chunks/q_geWe1R.js\",\"_app/immutable/chunks/Co0R7JPe.js\",\"_app/immutable/chunks/Dg2TCPR_.js\",\"_app/immutable/chunks/BHm98m4T.js\",\"_app/immutable/chunks/CNxF7Pog.js\",\"_app/immutable/chunks/DGxjUAYV.js\",\"_app/immutable/chunks/BjxZ6Dx9.js\",\"_app/immutable/chunks/CLa6yqf_.js\",\"_app/immutable/chunks/CBLA49U0.js\",\"_app/immutable/chunks/BMspJ8Yh.js\",\"_app/immutable/chunks/CmULTxPs.js\",\"_app/immutable/chunks/BdHGsVH7.js\",\"_app/immutable/chunks/Cd7yCszS.js\",\"_app/immutable/chunks/Cl_oq7nf.js\",\"_app/immutable/chunks/BUlJYItk.js\",\"_app/immutable/chunks/DhHZR6J_.js\",\"_app/immutable/chunks/PI_H1sqg.js\",\"_app/immutable/chunks/_Y1sUBdb.js\",\"_app/immutable/chunks/DTKX657x.js\",\"_app/immutable/chunks/CfhtIqMF.js\",\"_app/immutable/chunks/DBcW8l46.js\",\"_app/immutable/chunks/DOd2QSgZ.js\",\"_app/immutable/chunks/DaJoOla_.js\",\"_app/immutable/chunks/HUBSOgFT.js\",\"_app/immutable/chunks/Cvje7MCY.js\",\"_app/immutable/chunks/D1dXutnj.js\",\"_app/immutable/chunks/BD6Ecydl.js\",\"_app/immutable/chunks/Jos_wYTi.js\",\"_app/immutable/chunks/CCIBMD7x.js\"];\nexport const stylesheets = [];\nexport const fonts = [];\n"],"names":[],"mappings":"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"}