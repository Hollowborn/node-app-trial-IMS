{"version":3,"file":"9-CfjQwhRU.js","sources":["../../../.svelte-kit/adapter-node/entries/pages/dashboard/clients/_clientId_/stocking-info/_stockingId_/sales/_page.server.ts.js","../../../.svelte-kit/adapter-node/nodes/9.js"],"sourcesContent":["import { r as requireRole } from \"../../../../../../../../chunks/auth.js\";\nimport { e as error, f as fail } from \"../../../../../../../../chunks/index2.js\";\nimport { d as db } from \"../../../../../../../../chunks/database.js\";\nimport { l as logActivity } from \"../../../../../../../../chunks/activityLogger.js\";\nconst load = async (event) => {\n  await requireRole(event, [\"admin\"]);\n  const clientId = event.params.clientId;\n  const stockingId = event.params.stockingId;\n  event.depends(`app:sales:${stockingId}`);\n  if (!clientId || isNaN(Number(clientId)) || !stockingId || isNaN(Number(stockingId))) {\n    throw error(404, \"Invalid Client or Stocking ID.\");\n  }\n  const url = new URL(event.request.url);\n  const search = url.searchParams.get(\"search\") || \"\";\n  const sortBy = url.searchParams.get(\"sort\") || \"created_at\";\n  const sortOrder = url.searchParams.get(\"order\") || \"desc\";\n  let salesRecords;\n  let stockingDetails;\n  let clientDetails;\n  try {\n    clientDetails = db.prepare(\"SELECT id, name FROM clients WHERE id = ?\").get(clientId);\n    if (!clientDetails) {\n      throw error(404, \"Client not found.\");\n    }\n    stockingDetails = db.prepare(\n      \"SELECT id, client_id, stocking_date, species_name, fingerlings_stocked_count_ma FROM stocking_info WHERE id = ? AND client_id = ?\"\n    ).get(stockingId, clientId);\n    if (!stockingDetails) {\n      throw error(404, \"Stocking record not found for this client.\");\n    }\n    let salesQuery = `\n      SELECT\n        id,\n        stocking_id,\n        estimated_sales,\n        projected_amount,\n        feeds_used_kg,\n        feed_cost,\n        remarks,\n        created_at\n      FROM sales\n      WHERE stocking_id = ?\n    `;\n    const queryParams = [stockingId];\n    const searchConditions = [];\n    if (search) {\n      searchConditions.push(`remarks LIKE ?`);\n      queryParams.push(`%${search}%`);\n    }\n    if (searchConditions.length > 0) {\n      salesQuery += ` AND (${searchConditions.join(\" OR \")})`;\n    }\n    const allowedSortColumns = [\n      \"estimated_sales\",\n      \"projected_amount\",\n      \"feeds_used_kg\",\n      \"feed_cost\",\n      \"created_at\"\n      // \"updated_at\", // Removed\n    ];\n    const finalSortBy = allowedSortColumns.includes(sortBy) ? sortBy : \"created_at\";\n    const finalSortOrder = sortOrder.toLowerCase() === \"asc\" ? \"ASC\" : \"DESC\";\n    salesQuery += ` ORDER BY ${finalSortBy} ${finalSortOrder}`;\n    salesRecords = db.prepare(salesQuery).all(...queryParams);\n  } catch (error$1) {\n    console.error(\"Error fetching sales info or parent details:\", error$1);\n    throw error(\n      500,\n      \"Failed to load sales information. Please try again later.\"\n    );\n  }\n  return {\n    client: clientDetails,\n    stocking: stockingDetails,\n    salesRecords: salesRecords.map((record) => ({\n      ...record,\n      created_at: record.created_at ? new Date(record.created_at).toISOString().split(\"T\")[0] : null\n      // updated_at: record.updated_at ? new Date(record.updated_at).toISOString().split(\"T\")[0] : null, // Removed\n    })),\n    search,\n    sortBy,\n    sortOrder: sortOrder.toLowerCase()\n  };\n};\nconst actions = {\n  create: async ({ request, params, locals }) => {\n    const clientId = params.clientId;\n    const stockingId = params.stockingId;\n    if (!stockingId || isNaN(Number(stockingId))) {\n      return fail(400, { error: \"Invalid Stocking ID for sales creation.\" });\n    }\n    const data = await request.formData();\n    const estimated_sales = Number(data.get(\"estimated_sales\"));\n    const projected_amount = Number(data.get(\"projected_amount\"));\n    const feeds_used_kg = Number(data.get(\"feeds_used_kg\"));\n    const feed_cost = Number(data.get(\"feed_cost\"));\n    const remarks = data.get(\"remarks\")?.toString();\n    if (isNaN(estimated_sales) || isNaN(projected_amount) || isNaN(feeds_used_kg) || isNaN(feed_cost)) {\n      return fail(400, {\n        error: \"Estimated Sales, Projected Amount, Feeds Used (kg), and Feed Cost are required and must be valid numbers.\"\n      });\n    }\n    try {\n      const transactionResult = db.transaction(() => {\n        const insertResult = db.prepare(\n          `\n          INSERT INTO sales (\n            stocking_id, estimated_sales, projected_amount, feeds_used_kg,\n            feed_cost, remarks\n          ) VALUES (?, ?, ?, ?, ?, ?)\n          `\n        ).run(\n          Number(stockingId),\n          estimated_sales,\n          projected_amount,\n          feeds_used_kg,\n          feed_cost,\n          remarks || null\n        );\n        const newID = Number(insertResult.lastInsertRowid);\n        const userId = locals.user?.id || null;\n        const clientStockingDetails = db.prepare(\n          `\n          SELECT c.name AS client_name, si.species_name\n          FROM stocking_info si\n          JOIN clients c ON si.client_id = c.id\n          WHERE si.id = ? AND si.client_id = ?\n        `\n        ).get(Number(stockingId), Number(clientId));\n        const clientName = clientStockingDetails?.client_name || \"Unknown Client\";\n        const speciesName = clientStockingDetails?.species_name || \"Unknown Species\";\n        logActivity(\n          // Await is not needed here if logActivity is synchronous or handled by the transaction\n          \"created\",\n          \"sales\",\n          newID,\n          `New sales record for client \"${clientName}\" (Species: ${speciesName}, Estimated Sales: ${estimated_sales}) added.`,\n          userId\n        );\n        return { success: true };\n      })();\n      return transactionResult;\n    } catch (error2) {\n      console.error(\"Error creating sales record:\", error2);\n      return fail(500, { error: \"Failed to create sales record.\" });\n    }\n  },\n  update: async ({ request, params, locals }) => {\n    const clientId = params.clientId;\n    const stockingId = params.stockingId;\n    if (!stockingId || isNaN(Number(stockingId))) {\n      return fail(400, { error: \"Invalid Stocking ID for sales update.\" });\n    }\n    const data = await request.formData();\n    const id = Number(data.get(\"id\"));\n    const estimated_sales = Number(data.get(\"estimated_sales\"));\n    const projected_amount = Number(data.get(\"projected_amount\"));\n    const feeds_used_kg = Number(data.get(\"feeds_used_kg\"));\n    const feed_cost = Number(data.get(\"feed_cost\"));\n    const remarks = data.get(\"remarks\")?.toString();\n    if (isNaN(id) || isNaN(estimated_sales) || isNaN(projected_amount) || isNaN(feeds_used_kg) || isNaN(feed_cost)) {\n      return fail(400, {\n        error: \"ID and all required fields must be valid for update.\"\n      });\n    }\n    try {\n      const transactionResult = db.transaction(() => {\n        const currentSalesRecord = db.prepare(\n          \"SELECT estimated_sales, projected_amount FROM sales WHERE id = ?\"\n        ).get(id);\n        const oldEstimatedSales = currentSalesRecord?.estimated_sales || 0;\n        const oldProjectedAmount = currentSalesRecord?.projected_amount || 0;\n        db.prepare(\n          `\n          UPDATE sales\n          SET\n            estimated_sales = ?,\n            projected_amount = ?,\n            feeds_used_kg = ?,\n            feed_cost = ?,\n            remarks = ?\n            -- updated_at = CURRENT_TIMESTAMP // Removed\n          WHERE id = ? AND stocking_id = ?\n          `\n        ).run(\n          estimated_sales,\n          projected_amount,\n          feeds_used_kg,\n          feed_cost,\n          remarks || null,\n          id,\n          Number(stockingId)\n        );\n        const userId = locals.user?.id || null;\n        const clientStockingDetails = db.prepare(\n          `\n          SELECT c.name AS client_name, si.species_name\n          FROM stocking_info si\n          JOIN clients c ON si.client_id = c.id\n          WHERE si.id = ? AND si.client_id = ?\n        `\n        ).get(Number(stockingId), Number(clientId));\n        const clientName = clientStockingDetails?.client_name || \"Unknown Client\";\n        const speciesName = clientStockingDetails?.species_name || \"Unknown Species\";\n        logActivity(\n          \"updated\",\n          \"sales\",\n          id,\n          `Sales record for client \"${clientName}\" (Species: ${speciesName}, Old Estimated Sales: ${oldEstimatedSales}, Old Projected Amount: ${oldProjectedAmount}) updated.`,\n          userId\n        );\n        return { success: true };\n      })();\n      return transactionResult;\n    } catch (error2) {\n      console.error(\"Error updating sales record:\", error2);\n      return fail(500, { error: \"Failed to update sales record.\" });\n    }\n  },\n  delete: async ({ request, params, locals }) => {\n    const clientId = params.clientId;\n    const stockingId = params.stockingId;\n    if (!stockingId || isNaN(Number(stockingId))) {\n      return fail(400, { error: \"Invalid Stocking ID for sales deletion.\" });\n    }\n    const data = await request.formData();\n    const id = Number(data.get(\"id\"));\n    if (isNaN(id)) {\n      return fail(400, { error: \"Sales ID is required.\" });\n    }\n    try {\n      const transactionResult = db.transaction(() => {\n        const salesRecordToDelete = db.prepare(\n          \"SELECT estimated_sales, projected_amount FROM sales WHERE id = ?\"\n        ).get(id);\n        const estimatedSales = salesRecordToDelete?.estimated_sales || 0;\n        const projectedAmount = salesRecordToDelete?.projected_amount || 0;\n        db.prepare(\"DELETE FROM sales WHERE id = ? AND stocking_id = ?\").run(\n          id,\n          Number(stockingId)\n        );\n        const userId = locals.user?.id || null;\n        const clientStockingDetails = db.prepare(\n          `\n          SELECT c.name AS client_name, si.species_name\n          FROM stocking_info si\n          JOIN clients c ON si.client_id = c.id\n          WHERE si.id = ? AND si.client_id = ?\n        `\n        ).get(Number(stockingId), Number(clientId));\n        const clientName = clientStockingDetails?.client_name || \"Unknown Client\";\n        const speciesName = clientStockingDetails?.species_name || \"Unknown Species\";\n        logActivity(\n          \"deleted\",\n          \"sales\",\n          id,\n          `Sales record for client \"${clientName}\" (Species: ${speciesName}, Estimated Sales: ${estimatedSales}, Projected Amount: ${projectedAmount}) deleted.`,\n          userId\n        );\n        return { success: true };\n      })();\n      return transactionResult;\n    } catch (error2) {\n      console.error(\"Error deleting sales record:\", error2);\n      return fail(500, { error: \"Failed to delete sales record.\" });\n    }\n  }\n};\nexport {\n  actions,\n  load\n};\n","import * as server from '../entries/pages/dashboard/clients/_clientId_/stocking-info/_stockingId_/sales/_page.server.ts.js';\n\nexport const index = 9;\nlet component_cache;\nexport const component = async () => component_cache ??= (await import('../entries/pages/dashboard/clients/_clientId_/stocking-info/_stockingId_/sales/_page.svelte.js')).default;\nexport { server };\nexport const server_id = \"src/routes/dashboard/clients/[clientId]/stocking-info/[stockingId]/sales/+page.server.ts\";\nexport const imports = [\"_app/immutable/nodes/9.D6qqR3OI.js\",\"_app/immutable/chunks/CY4Ce0c4.js\",\"_app/immutable/chunks/BdQXYw_T.js\",\"_app/immutable/chunks/BO5sSAji.js\",\"_app/immutable/chunks/DAK0Aekt.js\",\"_app/immutable/chunks/D9hGQICX.js\",\"_app/immutable/chunks/DsUCSRu3.js\",\"_app/immutable/chunks/B7wWqVz8.js\",\"_app/immutable/chunks/D8SxGvop.js\",\"_app/immutable/chunks/Bex-ZZ3I.js\",\"_app/immutable/chunks/1fwwRmkB.js\",\"_app/immutable/chunks/BZ9DdiR_.js\",\"_app/immutable/chunks/B3kFzWm3.js\",\"_app/immutable/chunks/MTanKdmA.js\",\"_app/immutable/chunks/BDEhTM1z.js\",\"_app/immutable/chunks/79yj6mvb.js\",\"_app/immutable/chunks/C8nz08U9.js\",\"_app/immutable/chunks/BXiYU_fU.js\",\"_app/immutable/chunks/DYevSITT.js\",\"_app/immutable/chunks/BnoYQOO4.js\",\"_app/immutable/chunks/DG-I9f0P.js\",\"_app/immutable/chunks/BCMyTCEX.js\",\"_app/immutable/chunks/B_4Zpmki.js\",\"_app/immutable/chunks/BOqc4mWw.js\",\"_app/immutable/chunks/FbqajOR9.js\",\"_app/immutable/chunks/UFUhM6vw.js\",\"_app/immutable/chunks/6xhieDVM.js\",\"_app/immutable/chunks/CsJL26Fh.js\",\"_app/immutable/chunks/CVjO-GJU.js\",\"_app/immutable/chunks/DIvwaDiU.js\",\"_app/immutable/chunks/CEVutZxn.js\",\"_app/immutable/chunks/CPRTWbuQ.js\",\"_app/immutable/chunks/BZzk2vwh.js\",\"_app/immutable/chunks/_cz2kCqa.js\",\"_app/immutable/chunks/0urWu8Wf.js\",\"_app/immutable/chunks/CPLOLVSj.js\",\"_app/immutable/chunks/eT-nG_na.js\",\"_app/immutable/chunks/CfmL5u39.js\",\"_app/immutable/chunks/CTGOP75E.js\",\"_app/immutable/chunks/DgoSFWl1.js\",\"_app/immutable/chunks/D_UmtYL2.js\"];\nexport const stylesheets = [];\nexport const fonts = [];\n"],"names":[],"mappings":"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"}