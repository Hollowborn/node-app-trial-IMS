{"version":3,"file":"4-CXlgl4Ez.js","sources":["../../../.svelte-kit/adapter-node/entries/pages/dashboard/_page.server.ts.js","../../../.svelte-kit/adapter-node/nodes/4.js"],"sourcesContent":["import \"../../../chunks/auth.js\";\nimport { e as error } from \"../../../chunks/index2.js\";\nimport { d as db } from \"../../../chunks/database.js\";\nconst load = async (event) => {\n  if (!event.locals.user) {\n    console.warn(\n      \"DEBUG: event.locals.user is null in dashboard load. Providing a placeholder.\"\n    );\n    event.locals.user = {\n      id: 0,\n      // Placeholder ID\n      username: \"guest\",\n      display_name: \"Guest User\",\n      role: \"admin\",\n      // Or 'admin' if you want to see admin features\n      profile_image: null\n      // No avatar for guest\n    };\n  }\n  try {\n    const totalClients = db.prepare(\"SELECT COUNT(id) AS count FROM clients\").get();\n    const newClientsLastMonth = db.prepare(\n      `SELECT COUNT(id) AS count FROM clients WHERE created_at >= DATE('now', '-30 days')`\n    ).get();\n    const totalPonds = db.prepare(\"SELECT COUNT(id) AS count FROM ponds\").get();\n    const activePonds = db.prepare(\"SELECT COUNT(id) AS count FROM ponds WHERE status = 'active'\").get();\n    const inactiveClients = db.prepare(\n      \"SELECT COUNT(id) AS count FROM clients WHERE status != 'active'\"\n    ).get();\n    const inactivePonds = db.prepare(\"SELECT COUNT(id) AS count FROM ponds WHERE status != 'active'\").get();\n    const totalEmployees = db.prepare(\"SELECT COUNT(id) AS count FROM employees\").get();\n    const newEmployeesThisQuarter = db.prepare(\n      `SELECT COUNT(id) AS count FROM employees WHERE created_at >= DATE('now', '-3 months')`\n    ).get();\n    const totalStockingEvents = db.prepare(\"SELECT COUNT(id) AS count FROM stocking_info\").get();\n    const lastStockingDate = db.prepare(\"SELECT MAX(stocking_date) AS last_date FROM stocking_info\").get();\n    const stockedThisMonth = db.prepare(\n      `\n    SELECT COUNT(*) AS count\n    FROM stocking_info\n    WHERE strftime('%Y-%m', stocking_date) = strftime('%Y-%m', 'now')\n  `\n    ).get();\n    const employeesWithBirthdayThisMonth = db.prepare(\n      `SELECT id, name, birthday\n     FROM employees\n     WHERE strftime('%m', birthday) = strftime('%m', 'now')`\n    ).all();\n    const formattedBirthdays = employeesWithBirthdayThisMonth.map((emp) => ({\n      ...emp,\n      birthday: new Date(emp.birthday).toLocaleDateString(\"en-US\", {\n        month: \"long\",\n        day: \"numeric\"\n      })\n    }));\n    const salesSummary = db.prepare(\n      `\n      SELECT\n        SUM(estimated_sales) AS total_estimated_sales,\n        SUM(projected_amount) AS total_projected_amount,\n        SUM(feeds_used_kg) AS total_feeds_used_kg,\n        SUM(feed_cost) AS total_feed_cost\n      FROM sales\n    `\n    ).get();\n    const feedInventorySummary = db.prepare(\n      `\n      SELECT\n        SUM(quantity_kg) AS total_quantity_kg,\n        SUM(total_cost) AS total_cost\n      FROM feed_inventory\n    `\n    ).get();\n    const hardwareInventorySummary = db.prepare(\n      `\n      SELECT\n        SUM(quantity) AS total_quantity,\n        SUM(total_cost) AS total_cost\n      FROM hardware_inventory\n    `\n    ).get();\n    const recentStocking = db.prepare(\n      `\n      SELECT\n        si.id,\n        si.stocking_date,\n        si.species_name,\n        si.fingerlings_stocked_count_ma,\n        c.name AS client_name\n      FROM stocking_info AS si\n      JOIN clients AS c ON si.client_id = c.id\n      ORDER BY si.stocking_date DESC\n      LIMIT 5\n    `\n    ).all();\n    const productionSummary = db.prepare(\n      `\n      SELECT\n        SUM(mortality_count) AS total_mortality_count,\n        SUM(feed_consumed_kg) AS total_feed_consumed_kg\n      FROM production_reports\n    `\n    ).get();\n    const clientsByOperatorType = db.prepare(\n      `\n      SELECT operator_type, COUNT(id) AS count\n      FROM clients\n      GROUP BY operator_type\n    `\n    ).all() || [];\n    const monthlyStocking = db.prepare(\n      `\n      SELECT\n        STRFTIME('%Y-%m', stocking_date) AS month,\n        COUNT(id) AS count\n      FROM stocking_info\n      GROUP BY month\n      ORDER BY month ASC\n      LIMIT 12 -- Last 12 months\n    `\n    ).all() || [];\n    const monthlyStockingChartData = monthlyStocking.map((item) => {\n      const [yearStr, monthStr] = item.month.split(\"-\");\n      const date = new Date(parseInt(yearStr), parseInt(monthStr) - 1);\n      const monthName = date.toLocaleString(\"en-US\", { month: \"short\" });\n      return {\n        month: monthName,\n        // The short month name for X-axis\n        year: parseInt(yearStr),\n        // The year as a number\n        fullMonth: item.month,\n        // Keep the original 'YYYY-MM' for tooltip if needed\n        count: item.count\n      };\n    });\n    const feedConsumptionByStage = db.prepare(\n      `\n      SELECT feed_stage, SUM(current_stock_kg) AS current_kg, SUM(quantity_kg) AS total_kg\n      FROM feed_inventory\n      GROUP BY feed_stage\n    `\n    ).all() || [];\n    const topHardwareItems = db.prepare(\n      `\n      SELECT item_name, total_cost\n      FROM hardware_inventory\n      ORDER BY total_cost DESC\n      LIMIT 5\n    `\n    ).all() || [];\n    const upcomingBookings = db.prepare(\n      `\n        SELECT\n        b.id,\n        b.purpose,\n        b.date,\n        b.time,\n        c.name AS client_name\n      FROM bookings AS b\n      JOIN clients AS c ON b.client_id = c.id\n      WHERE\n        (b.date > CURRENT_DATE) -- Bookings on future dates\n        OR\n        (b.date = CURRENT_DATE AND b.time > CURRENT_TIME) -- Bookings today, but in the future\n        ORDER BY b.date ASC, b.time ASC\n      LIMIT 5        \n        `\n    ).all();\n    const bookingsStatus = db.prepare(\n      `\n      SELECT status, COUNT(id) AS count\n      FROM bookings\n      GROUP BY status\n    `\n    ).all() || [];\n    const recentActivities = db.prepare(\n      `\n    SELECT\n      al.id,\n      al.action_type,\n      al.entity_type,\n      al.entity_id,\n      al.description,\n      al.timestamp,\n      u.username AS performed_by_user -- Assuming a 'users' table with username\n    FROM activity_log AS al\n    LEFT JOIN users AS u ON al.user_id = u.id -- Join if user_id is logged\n    ORDER BY al.timestamp DESC\n    LIMIT 10 -- Fetch the latest 10 activities\n  `\n    ).all();\n    return {\n      keyMetrics: {\n        totalClients: totalClients.count,\n        newClientsLastMonth: newClientsLastMonth.count,\n        totalPonds: totalPonds.count,\n        activePonds: activePonds.count,\n        inactivePonds: inactivePonds.count,\n        totalEmployees: totalEmployees.count,\n        newEmployeesThisQuarter: newEmployeesThisQuarter.count,\n        totalStockingEvents: totalStockingEvents.count,\n        lastStockingDate: lastStockingDate.last_date,\n        stockedPondsThisMonth: stockedThisMonth.count,\n        inactiveClients: inactiveClients.count,\n        birthdaysThisMonth: formattedBirthdays\n      },\n      financialSummary: {\n        totalEstimatedSales: salesSummary.total_estimated_sales || 0,\n        totalProjectedAmount: salesSummary.total_projected_amount || 0,\n        totalFeedsUsedKg: salesSummary.total_feeds_used_kg || 0,\n        totalFeedCost: salesSummary.total_feed_cost || 0\n      },\n      inventorySummary: {\n        totalFeedQuantityKg: feedInventorySummary.total_quantity_kg || 0,\n        totalFeedCost: feedInventorySummary.total_cost || 0,\n        totalHardwareQuantity: hardwareInventorySummary.total_quantity || 0,\n        totalHardwareCost: hardwareInventorySummary.total_cost || 0\n      },\n      productionSummary: {\n        totalMortalityCount: productionSummary.total_mortality_count || 0,\n        totalFeedConsumedKg: productionSummary.total_feed_consumed_kg || 0\n      },\n      recentActivities: recentActivities.map((activity) => ({\n        ...activity,\n        timestamp: new Date(activity.timestamp).toLocaleString()\n        // Format timestamp for display\n      })),\n      recentStocking: recentStocking.map((s) => ({\n        ...s,\n        stocking_date: new Date(s.stocking_date).toLocaleDateString(\"en-US\", {\n          year: \"numeric\",\n          month: \"short\",\n          day: \"numeric\"\n        })\n      })),\n      upcomingBookings: upcomingBookings.map((booking) => ({\n        ...booking,\n        date: new Date(booking.date).toLocaleDateString(\"en-US\", {\n          year: \"numeric\",\n          month: \"short\",\n          day: \"numeric\"\n        }),\n        time: booking.time.substring(0, 5)\n        // Format time to HH:MM\n      })),\n      charts: {\n        clientsByOperatorType,\n        monthlyStockingChartData,\n        feedConsumptionByStage,\n        topHardwareItems,\n        bookingsStatus\n      }\n    };\n  } catch (error$1) {\n    console.error(\"Error loading dashboard data:\", error$1);\n    throw error(\n      500,\n      \"Failed to load dashboard data. Please try again later.\"\n    );\n  }\n};\nexport {\n  load\n};\n","import * as server from '../entries/pages/dashboard/_page.server.ts.js';\n\nexport const index = 4;\nlet component_cache;\nexport const component = async () => component_cache ??= (await import('../entries/pages/dashboard/_page.svelte.js')).default;\nexport { server };\nexport const server_id = \"src/routes/dashboard/+page.server.ts\";\nexport const imports = [\"_app/immutable/nodes/4.CxuSZUog.js\",\"_app/immutable/chunks/CY4Ce0c4.js\",\"_app/immutable/chunks/BdQXYw_T.js\",\"_app/immutable/chunks/BO5sSAji.js\",\"_app/immutable/chunks/DAK0Aekt.js\",\"_app/immutable/chunks/D9hGQICX.js\",\"_app/immutable/chunks/DsUCSRu3.js\",\"_app/immutable/chunks/B7wWqVz8.js\",\"_app/immutable/chunks/C8nz08U9.js\",\"_app/immutable/chunks/BZ9DdiR_.js\",\"_app/immutable/chunks/B3kFzWm3.js\",\"_app/immutable/chunks/BDEhTM1z.js\",\"_app/immutable/chunks/DIDi3WRX.js\",\"_app/immutable/chunks/BWso7QFC.js\",\"_app/immutable/chunks/CPLOLVSj.js\",\"_app/immutable/chunks/DYevSITT.js\",\"_app/immutable/chunks/BnoYQOO4.js\",\"_app/immutable/chunks/MTanKdmA.js\",\"_app/immutable/chunks/CsJL26Fh.js\",\"_app/immutable/chunks/suOI_0RJ.js\",\"_app/immutable/chunks/1fwwRmkB.js\",\"_app/immutable/chunks/CBm4oYYw.js\",\"_app/immutable/chunks/DIvwaDiU.js\",\"_app/immutable/chunks/_cz2kCqa.js\",\"_app/immutable/chunks/DKjMnuhQ.js\",\"_app/immutable/chunks/BCMyTCEX.js\",\"_app/immutable/chunks/B_4Zpmki.js\",\"_app/immutable/chunks/BOqc4mWw.js\",\"_app/immutable/chunks/FbqajOR9.js\",\"_app/immutable/chunks/CjnbRfgs.js\",\"_app/immutable/chunks/NyzMnUbZ.js\",\"_app/immutable/chunks/BQbVfyjS.js\",\"_app/immutable/chunks/0dNO5ytf.js\",\"_app/immutable/chunks/CTGOP75E.js\",\"_app/immutable/chunks/BEZ6n8_C.js\",\"_app/immutable/chunks/KsacpnHi.js\",\"_app/immutable/chunks/BDK_vEsL.js\"];\nexport const stylesheets = [\"_app/immutable/assets/4.D5n1WDsw.css\"];\nexport const fonts = [];\n"],"names":[],"mappings":"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"}